

<div class="border">
    <div class="card-header text-center">
        <h1>Author Form</h1>
    </div>
    <div class="card-body">
        <EditForm Model="Author">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="FirstName" class="form-label">First Name</label>
                <InputText @bind-Value="Author.FirstName" class="form-control" placeholder="First Name" />
                <ValidationMessage For="@(() => Author.FirstName)" />
            </div>
            <div class="form-group">
                <label for="LastName" class="form-label">Last Name</label>
                <InputText @bind-Value="Author.LastName" class="form-control" placeholder="Last Name" />
                <ValidationMessage For="@(() => Author.LastName)" />
            </div>
            <div class="form-group">
                <label for="Email" class="form-label">Email</label>
                <InputText @bind-Value="Author.Email" class="form-control" placeholder="Email" />
                <ValidationMessage For="@(() => Author.Email)" />
            </div>
            <div class="form-group">
                <label for="PhoneNumber" class="form-label">Phone Number</label>
                <InputText @bind-Value="Author.PhoneNumber" class="form-control" placeholder="Phone Number" />
                <ValidationMessage For="@(() => Author.PhoneNumber)" />
            </div>
            <div class="form-group">
                <label for="BirthDate" class="form-label">Birth Date</label>
                <InputDate @bind-Value="Author.DateOfBirth" class="form-control" placeholder="Birth Date" />
                <ValidationMessage For="@(() => Author.DateOfBirth)" />
            </div>
            <div class="form-group">
                <InputImage Label="Image" OnSelectedImage="OnSelectedImage" ImageURL="@imageURL" />
            </div>
        </EditForm>
    </div>
    <div class="card-footer">
        <div class="form-group">
            <button type="button" @onclick="UpsertAuthor" class="btn btn-outline-success btn-block" style="font-weight: bold">@UpsertButton</button>
            <button type="button" @onclick="CancelMethod" class="btn btn-outline-primary btn-block" style="font-weight: bold">@CancelButton</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public AuthorView Author { get; set; } = new AuthorView();

    [Parameter]
    public EventCallback UpsertAuthor { get; set; }

    [Parameter]
    public EventCallback CancelMethod { get; set; }

    [Parameter]
    public string UpsertButton { get; set; }

    [Parameter]
    public string CancelButton { get; set; }

    private string imageURL;

    protected override void OnInitialized()
    {

        if (!string.IsNullOrWhiteSpace(Author.PhotoPath))
        {
            imageURL = Author.PhotoPath;
            Author.PhotoPath = null;
        }

    }

    private void OnSelectedImage(string imageBase64)
    {
        Author.PhotoPath = imageBase64;
        imageURL = null;
    }
}